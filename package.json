{
    "name": "prettyxml",
    "displayName": "Pretty XML",
    "author": {
        "name": "Prateek Mahendrakar"
    },
    "readme": "https://github.com/pmahend1/PrettyXML/blob/main/README.md",
    "description": "XML formatter extension for Visual Studio Code. Formats XML documents just like Visual Studio.",
    "version": "4.1.1",
    "publisher": "PrateekMahendrakar",
    "repository": {
        "url": "https://github.com/pmahend1/prettyxml.git"
    },
    "icon": "images/logo.png",
    "license": "MIT",
    "bugs": "https://github.com/pmahend1/prettyxml/issues",
    "preview": false,
    "galleryBanner": {
        "color": "#445678",
        "theme": "dark"
    },
    "markdown": "standard",
    "keywords": [
        "xml",
        "xaml",
        "xsd",
        "xsl",
        "plist",
        "mobileconfig",
        "config",
        "csproj",
        "axml",
        "resx",
        "formatter"
    ],
    "engines": {
        "vscode": "^1.59.0"
    },
    "categories": [
        "Formatters"
    ],
    "activationEvents": [
        "onLanguage:xml"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "prettyxml.prettifyxml",
                "title": "Prettify XML"
            },
            {
                "command": "prettyxml.minimizexml",
                "title": "Pretty XML: Minimize"
            }
        ],
        "keybindings": [
            {
                "command": "prettyxml.prettifyxml",
                "key": "ctrl+k l",
                "when": "!isMac"
            },
            {
                "command": "prettyxml.prettifyxml",
                "key": "cmd+k l",
                "when": "isMac"
            },
            {
                "command": "prettyxml.minimizexml",
                "key": "ctrl+k `",
                "when": "!isMac"
            },
            {
                "command": "prettyxml.minimizexml",
                "key": "cmd+k `",
                "when": "isMac"
            }
        ],
        "languages": [
            {
                "id": "xml",
                "extensions": [
                    ".config",
                    ".csproj",
                    ".xml",
                    ".xsd",
                    ".xsl",
                    ".plist",
                    ".mobileconfig",
                    ".xaml",
                    ".axml",
                    ".axaml",
                    ".resx",
                    ".svg"
                ]
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "prettyxml.prettifyxml",
                    "group": "1_modification@100",
                    "when": "editorLangId == 'xml'"
                }
            ]
        },
        "configuration": [
            {
                "title": "PrettyXML Settings",
                "properties": {
                    "prettyxml.settings.indentSpaceLength": {
                        "type": "number",
                        "default": 4,
                        "enum": [
                            2,
                            4,
                            8
                        ],
                        "markdownDescription": "No. of spaces for indentation. *Default* is *4*"
                    },
                    "prettyxml.settings.useSingleQuotes": {
                        "type": "boolean",
                        "markdownDescription": "Use apostrophe `'` instead of quotes `\"`. *Default* is *Unchecked* \n\n **Checked** : `Attribute='Value'` \n\n **Unchecked** :  `Attribute=\"Value\"`",
                        "default": false
                    },
                    "prettyxml.settings.useSelfClosingTag": {
                        "type": "boolean",
                        "markdownDescription": "If no child nodes then use self closing tag `/>`. *Default* is *Checked* \n\n **Checked** : `<Foo></Foo>` → `<Foo/>` \n\n  **Unchecked** : `<Foo></Foo>` → `<Foo></Foo>` ",
                        "default": true
                    },
                    "prettyxml.settings.formatOnSave": {
                        "type": "boolean",
                        "markdownDescription": "Enable format on save.  *Default* is *Unchecked*",
                        "default": false
                    },
                    "prettyxml.settings.allowSingleQuoteInAttributeValue": {
                        "type": "boolean",
                        "markdownDescription": "Allow single quote in attribute values. Ignored if *Use Single Quotes* is *Checked*. *Default* is *Checked* \n\n  **Checked** : `Attribute=\"Value'has'apostrphoes\"` \n\n **Unchecked** : `Attribute=\"Value&apos;has&apos;apostrphoes\"` \n\n  ",
                        "default": true
                    },
                    "prettyxml.settings.addSpaceBeforeSelfClosingTag": {
                        "type": "boolean",
                        "markdownDescription": "Add space before self closing tag. *Default* is *Checked* \n\n **Checked** : `<Foo />` \n\n **Unchecked** : `<Foo/>` ",
                        "default": true
                    },
                    "prettyxml.settings.wrapCommentTextWithSpaces": {
                        "type": "boolean",
                        "markdownDescription": "Wrap Comment text with spaces. Ignored if *Preserve White Spaces In Comment* is *Checked*. *Default* is *Checked* \n\n **Checked** : `<!-- Comment Text -->` \n\n **Unchecked** : `<!--Comment Text-->` ",
                        "default": true
                    },
                    "prettyxml.settings.allowWhiteSpaceUnicodesInAttributeValues": {
                        "type": "boolean",
                        "markdownDescription": "Allow unicode whitespace characters in attribute values. *Default* is *Checked* \n\n **Checked** : \n\n `&#10;` → `&#xA;` \n\n `&#9;` or `&#x9;` → `&#x9;` \n\n `>` → `>` \n\n **Unchecked** :\n\n `&#10;` → new line  \n\n `&#9;` or `&#x9;` → tab \n\n &gt; → `&gt;`",
                        "default": true
                    },
                    "prettyxml.settings.positionFirstAttributeOnSameLine": {
                        "type": "boolean",
                        "markdownDescription": "Position first attribute on same line. *Unchecked* on this setting will be ignored if *Position All Attributes On First Line*=*Checked*. *Default* is *Checked* \n\n **Checked** : \n\n `<Element Attribute=\"Value\"` \n\n **Unchecked** : \n\n `<Element` \n\n &emsp;&emsp; `Attribute=\"Value\"` ",
                        "default": true
                    },
                    "prettyxml.settings.positionAllAttributesOnFirstLine": {
                        "type": "boolean",
                        "markdownDescription": "Position all attributes on same line as element. Setting this to *Checked* will ignore *Position First Attribute On Same Line*=*Unchecked*. *Default* is *Unchecked.* \n\n **Checked** : \n\n `<Element Attribute1=\"Value1\" Attribute2=\"Value2\"` \n\n **Unchecked** :\n\n`<Element Attribute1=\"Value1\"`\n\n&emsp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;`Attribute2=\"Value2\"` ",
                        "default": false
                    },
                    "prettyxml.settings.preserveWhiteSpacesInComment": {
                        "type": "boolean",
                        "markdownDescription": "Preserves whitespaces in comment. Setting this *Checked* ignores *Wrap Comment Text With Spaces* setting. Default is *Unchecked* \n\n **Checked** : \n\n `<!--`&ensp;&ensp;&ensp;&ensp;`Comment`&ensp;&ensp;&ensp;&ensp;`-->` \n\n **Unchecked** : \n\n `<!--Comment-->`",
                        "default": false
                    },
                    "prettyxml.settings.enableLogs": {
                        "type": "boolean",
                        "markdownDescription": "Enable console local logs.",
                        "default": false
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "yarn run esbuild-base --minify",
        "compile": "tsc -p ./",
        "lint": "eslint src --ext ts",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=./out/extension.js --external:vscode --format=cjs --platform=node",
        "esbuild": "yarn run esbuild-base --sourcemap",
        "esbuild-watch": "yarn run esbuild-base --sourcemap --watch",
        "test-compile": "tsc -p ./",
        "pretest": "yarn run compile && yarn run lint",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.3",
        "@types/mocha": "^9.0.0",
        "@types/node": "^16.4.13",
        "@types/vscode": "^1.59.0",
        "@typescript-eslint/eslint-plugin": "^4.29.0",
        "@typescript-eslint/parser": "4.31.0",
        "esbuild": "^0.15.10",
        "eslint": "^7.6.0",
        "glob": "^7.1.6",
        "mocha": "^9.0.2",
        "typescript": "^4.1.3",
        "vscode-test": "^1.4.0"
    },
    "dependencies": {
        "@types/compare-versions": "^3.3.0",
        "child_process": "^1.0.2",
        "compare-versions": "^3.6.0",
        "fs": "^0.0.1-security",
        "path": "^0.12.7"
    }
}
